# -*- coding: utf-8 -*-
"""heartdata(original).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/171IBuNiqqcjxZzfppefbKpTHhrKXkMq_
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score 
from sklearn import datasets
from sklearn import svm

import warnings
warnings.filterwarnings('ignore')

something_data = pd.read_csv('/content/heart123.csv')

something_data.head()

something_data.tail()

something_data.info()

something_data.isnull().sum()

something_data.describe()

something_data['target'].value_counts()

X = something_data.drop(columns='target', axis=1)
Y = something_data['target']

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, stratify=Y, random_state=3)

print(X.shape, X_train.shape, X_test.shape)

model = LogisticRegression()

model.fit(X_train, Y_train)

X_train_prediction = model.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)

print("accuracy on training data", training_data_accuracy)

X_test_prediction = model.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)

print("accuracy on test data", test_data_accuracy)

from sklearn.metrics import confusion_matrix

cf_matrix = confusion_matrix(Y_test, X_test_prediction)

print(cf_matrix)

tn, fp, fn, tp = cf_matrix.ravel()
print(tn,fp,fn,tp)

import seaborn as sns
sns.heatmap(cf_matrix, annot=True)

input_data = (23, 3, 1, 1)

input_data_as_numpy_array = np.asarray(input_data)
input_data_reshaped = input_data_as_numpy_array.reshape(1, -1)
prediction = model.predict(input_data_reshaped)
print(prediction)

if (prediction[0]==0):
  print('you just might be lucky')
else:
  print('you should get yourself checked')

import pickle

filename = 'heart123.sav'
pickle.dump(model, open(filename, 'wb'))